{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\21627\\\\Desktop\\\\rapp\\\\src\\\\components\\\\registration\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { register } from \"./RegistrationStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Registration extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordConfrim: \"\",\n      hidePassword: true,\n      error: null,\n      errorOpen: false\n    };\n\n    this.errorClose = e => {\n      this.setState({\n        errorOpen: false\n      });\n    };\n\n    this.handleChange = name => e => {\n      this.setState({\n        [name]: e.target.value\n      });\n    };\n\n    this.passwordMatch = () => this.state.password === this.state.passwordConfrim;\n\n    this.showPassword = () => {\n      this.setState(prevState => ({\n        hidePassword: !prevState.hidePassword\n      }));\n    };\n\n    this.isValid = () => {\n      if (this.state.email === \"\") {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitRegistration = e => {\n      e.preventDefault();\n\n      if (!this.passwordMatch()) {\n        this.setState({\n          errorOpen: true,\n          error: \"Passwords don't match\"\n        });\n      }\n\n      const newUserCredentials = {\n        email: this.state.email,\n        password: this.state.password,\n        passwordConfrim: this.state.passwordConfrim\n      };\n      console.log(\"this.props.newUserCredentials\", newUserCredentials); //dispath to userActions\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            className: classes.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: () => this.submitRegistration,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"email\",\n              className: classes.labels,\n              children: \"e-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              className: classes.inputs,\n              disableUnderline: true,\n              onChange: this.handleChange(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"password\",\n              className: classes.labels,\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              autoComplete: \"password\",\n              className: classes.inputs,\n              disableUnderline: true,\n              onChange: this.handleChange(\"password\"),\n              type: this.state.hidePassword ? \"password\" : \"input\",\n              endAdornment: this.state.hidePassword ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityOffTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"passwordConfrim\",\n              className: classes.labels,\n              children: \"confrim password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"passwordConfrim\",\n              autoComplete: \"passwordConfrim\",\n              className: classes.inputs,\n              disableUnderline: true,\n              onClick: this.state.showPassword,\n              onChange: this.handleChange(\"passwordConfrim\"),\n              type: this.state.hidePassword ? \"password\" : \"input\",\n              endAdornment: this.state.hidePassword ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityOffTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                  fontSize: \"default\",\n                  className: classes.passwordEye,\n                  onClick: this.showPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !this.isValid(),\n            disableRipple: true,\n            fullWidth: true,\n            variant: \"outlined\",\n            className: classes.button,\n            type: \"submit\",\n            onClick: this.submitRegistration,\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), this.state.error ? /*#__PURE__*/_jsxDEV(Snackbar, {\n          variant: \"error\",\n          anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          },\n          open: this.state.errorOpen,\n          onClose: this.errorClose,\n          autoHideDuration: 3000,\n          children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n            className: classes.error,\n            message: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: \"8px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n                  fontSize: \"large\",\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", this.state.error, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this),\n            action: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"close\",\n              onClick: this.errorClose,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                color: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)\n            }, \"close\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, this.state.error, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(register)(Registration);","map":{"version":3,"sources":["C:/Users/21627/Desktop/rapp/src/components/registration/index.jsx"],"names":["React","Component","withStyles","register","InputAdornment","CssBaseline","Paper","Avatar","FormControl","Input","InputLabel","Button","PeopleAltIcon","Snackbar","SnackbarContent","IconButton","ErrorIcon","VisibilityTwoToneIcon","VisibilityOffTwoToneIcon","CloseIcon","Registration","state","email","password","passwordConfrim","hidePassword","error","errorOpen","errorClose","e","setState","handleChange","name","target","value","passwordMatch","showPassword","prevState","isValid","submitRegistration","preventDefault","newUserCredentials","console","log","render","classes","props","main","paper","avatar","icon","form","labels","inputs","passwordEye","button","vertical","horizontal","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { register } from \"./RegistrationStyles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\r\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfrim: \"\",\r\n    hidePassword: true,\r\n    error: null,\r\n    errorOpen: false\r\n  };\r\n\r\n  errorClose = e => {\r\n    this.setState({\r\n      errorOpen: false\r\n    });\r\n  };\r\n\r\n  handleChange = name => e => {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  passwordMatch = () => this.state.password === this.state.passwordConfrim;\r\n\r\n  showPassword = () => {\r\n    this.setState(prevState => ({ hidePassword: !prevState.hidePassword }));\r\n  };\r\n\r\n  isValid = () => {\r\n    if (this.state.email === \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  submitRegistration = e => {\r\n    e.preventDefault();\r\n    if (!this.passwordMatch()) {\r\n      this.setState({\r\n        errorOpen: true,\r\n        error: \"Passwords don't match\"\r\n      });\r\n    }\r\n    const newUserCredentials = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      passwordConfrim: this.state.passwordConfrim\r\n    };\r\n    console.log(\"this.props.newUserCredentials\", newUserCredentials);\r\n    //dispath to userActions\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.main}>\r\n        <CssBaseline />\r\n\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <PeopleAltIcon className={classes.icon} />\r\n          </Avatar>\r\n          <form\r\n            className={classes.form}\r\n            onSubmit={() => this.submitRegistration}\r\n          >\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"email\" className={classes.labels}>\r\n                e-mail\r\n              </InputLabel>\r\n              <Input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onChange={this.handleChange(\"email\")}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"password\" className={classes.labels}>\r\n                password\r\n              </InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                autoComplete=\"password\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onChange={this.handleChange(\"password\")}\r\n                type={this.state.hidePassword ? \"password\" : \"input\"}\r\n                endAdornment={\r\n                  this.state.hidePassword ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityOffTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  ) : (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  )\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl required fullWidth margin=\"normal\">\r\n              <InputLabel htmlFor=\"passwordConfrim\" className={classes.labels}>\r\n                confrim password\r\n              </InputLabel>\r\n              <Input\r\n                name=\"passwordConfrim\"\r\n                autoComplete=\"passwordConfrim\"\r\n                className={classes.inputs}\r\n                disableUnderline={true}\r\n                onClick={this.state.showPassword}\r\n                onChange={this.handleChange(\"passwordConfrim\")}\r\n                type={this.state.hidePassword ? \"password\" : \"input\"}\r\n                endAdornment={\r\n                  this.state.hidePassword ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityOffTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  ) : (\r\n                    <InputAdornment position=\"end\">\r\n                      <VisibilityTwoToneIcon\r\n                        fontSize=\"default\"\r\n                        className={classes.passwordEye}\r\n                        onClick={this.showPassword}\r\n                      />\r\n                    </InputAdornment>\r\n                  )\r\n                }\r\n              />\r\n            </FormControl>\r\n            <Button\r\n              disabled={!this.isValid()}\r\n              disableRipple\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              className={classes.button}\r\n              type=\"submit\"\r\n              onClick={this.submitRegistration}\r\n            >\r\n              Join\r\n            </Button>\r\n          </form>\r\n\r\n          {this.state.error ? (\r\n            <Snackbar\r\n              variant=\"error\"\r\n              key={this.state.error}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\"\r\n              }}\r\n              open={this.state.errorOpen}\r\n              onClose={this.errorClose}\r\n              autoHideDuration={3000}\r\n            >\r\n              <SnackbarContent\r\n                className={classes.error}\r\n                message={\r\n                  <div>\r\n                    <span style={{ marginRight: \"8px\" }}>\r\n                      <ErrorIcon fontSize=\"large\" color=\"error\" />\r\n                    </span>\r\n                    <span> {this.state.error} </span>\r\n                  </div>\r\n                }\r\n                action={[\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"close\"\r\n                    onClick={this.errorClose}\r\n                  >\r\n                    <CloseIcon color=\"error\" />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </Snackbar>\r\n          ) : null}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(register)(Registration);"]},"metadata":{},"sourceType":"module"}